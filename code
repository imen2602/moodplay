<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mood Playlists</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>Mood Playlists</h1>
        <button id="login-button">Se connecter à Spotify</button>
    </header>

    <section id="playlists">
        <h2>Playlists par Humeur</h2>
        <div id="playlist-container"></div>
    </section>

    <section id="create">
        <h2>Créer votre propre Playlist</h2>
        <form id="playlist-form">
            <input type="text" id="playlist-name" placeholder="Nom de la playlist" required>
            <input type="text" id="song-search" placeholder="Rechercher une chanson" required>
            <button type="submit">Ajouter</button>
        </form>
        <ul id="custom-playlist"></ul>
    </section>

    <script src="script.js"></script>
</body>
</html>

body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #121212;
    color: #ffffff;
}

header {
    background-color: #1DB954;
    padding: 1rem;
    text-align: center;
}

#login-button {
    padding: 0.5rem 1rem;
    background-color: #1DB954;
    border: none;
    border-radius: 4px;
    color: #ffffff;
    cursor: pointer;
}

section {
    padding: 2rem;
}

#playlist-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

.playlist-card {
    background-color: #282828;
    padding: 1rem;
    border-radius: 8px;
    width: 200px;
    text-align: center;
    cursor: pointer;
}

.playlist-card:hover {
    background-color: #383838;
}

#playlist-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

#playlist-form input {
    padding: 0.5rem;
    border: none;
    border-radius: 4px;
}

#playlist-form button {
    padding: 0.5rem;
    background-color: #1DB954;
    border: none;
    border-radius: 4px;
    color: #ffffff;
    cursor: pointer;
}

#custom-playlist {
    list-style: none;
    padding: 0;
}

#custom-playlist li {
    background-color: #282828;
    padding: 0.5rem;
    margin: 0.5rem 0;
    border-radius: 4px;
}


const CLIENT_ID = 'YOUR_CLIENT_ID';
const CLIENT_SECRET = 'YOUR_CLIENT_SECRET';
const REDIRECT_URI = 'http://localhost:3000/callback'; // Changez cela pour la production

let accessToken;

document.getElementById('login-button').addEventListener('click', () => {
    window.location.href = `https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&response_type=token&redirect_uri=${REDIRECT_URI}&scope=playlist-modify-public`;
});

// Gérer le token après la redirection
if (window.location.hash) {
    const hash = window.location.hash.substring(1);
    const params = new URLSearchParams(hash);
    accessToken = params.get('access_token');
    if (accessToken) {
        fetchPlaylists();
    }
}

async function fetchPlaylists() {
    const response = await fetch('https://api.spotify.com/v1/me/playlists', {
        headers: {
            'Authorization': `Bearer ${accessToken}`
        }
    });
    const data = await response.json();
    displayPlaylists(data.items);
}

function displayPlaylists(playlists) {
    const playlistContainer = document.getElementById('playlist-container');
    playlists.forEach(playlist => {
        const playlistCard = document.createElement('div');
        playlistCard.classList.add('playlist-card');
        playlistCard.textContent = playlist.name;
        playlistCard.addEventListener('click', () => {
            alert(`Playing: ${playlist.name}`);
        });
        playlistContainer.appendChild(playlistCard);
    });
}

document.getElementById('playlist-form').addEventListener('submit', async (event) => {
    event.preventDefault();
    const playlistName = document.getElementById('playlist-name').value;
    const songName = document.getElementById('song-search').value;

    if (playlistName && songName) {
        const track = await searchTrack(songName);
        if (track) {
            const listItem = document.createElement('li');
            listItem.textContent = `${playlistName}: ${track.name}`;
            document.getElementById('custom-playlist').appendChild(listItem);
        }
    }
});

async function searchTrack(query) {
    const response = await fetch(`https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=track`, {
        headers: {
            'Authorization': `Bearer ${accessToken}`
        }
    });
    const data = await response.json();
    return data.tracks.items[0];
}

